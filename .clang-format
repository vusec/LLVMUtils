---
BasedOnStyle: Chromium

AccessModifierOffset: -2

AlignAfterOpenBracket: Align
AlignArrayOfStructures: Right
AlignConsecutiveAssignments:
  Enabled: true
  PadOperators: true
  AlignCompound: true
  AcrossComments: true
  AcrossEmptyLines: false
AlignConsecutiveBitFields:
  Enabled: true
  AcrossComments: true
  AcrossEmptyLines: false
AlignConsecutiveDeclarations:
  Enabled: true
  AcrossComments: true
  AcrossEmptyLines: false
AlignConsecutiveMacros:
  Enabled: true
  AcrossComments: true
  AcrossEmptyLines: false
AlignEscapedNewlines: Right
AlignOperands: AlignAfterOperator
AlignTrailingComments:
  Kind: Always
  OverEmptyLines: 1

AllowAllArgumentsOnNextLine: false
AllowAllParametersOfDeclarationOnNextLine: false
AllowShortBlocksOnASingleLine: Always
AllowShortCaseLabelsOnASingleLine: true
AllowShortEnumsOnASingleLine: true
AllowShortFunctionsOnASingleLine: All
AllowShortIfStatementsOnASingleLine: AllIfsAndElse
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: true

AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: true
AlwaysBreakTemplateDeclarations: Yes

AttributeMacros: [
  '__capability',
  '__output',
  '__ununsed'
]

BinPackArguments: false
BinPackParameters: false

BitFieldColonSpacing: Both

BreakBeforeBraces: Custom
BraceWrapping:
  AfterCaseLabel: false
  AfterClass: true
  AfterControlStatement: Never
  AfterEnum: false
  AfterFunction: true
  AfterNamespace: true
  AfterObjCDeclaration: true
  AfterStruct: false
  AfterUnion: false
  AfterExternBlock: true
  BeforeCatch: false
  BeforeElse: false
  BeforeLambdaBody: false
  BeforeWhile: false
  IndentBraces: false
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: false

BreakAfterAttributes: Always
BreakAfterJavaFieldAnnotations: false
BreakArrays: true
BreakBeforeBinaryOperators: All
BreakBeforeConceptDeclarations: Always
BreakBeforeInlineASMColon: Always
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: AfterColon
BreakInheritanceList: AfterColon
BreakStringLiterals: true

ColumnLimit: 120

CommentPragmas: "^ NO_FORMAT"

CompactNamespaces: false

ConstructorInitializerIndentWidth: 8
ContinuationIndentWidth: 4

Cpp11BracedListStyle: true

DerivePointerAlignment: false

DisableFormat: false

EmptyLineAfterAccessModifier: Never
EmptyLineBeforeAccessModifier: Always

ExperimentalAutoDetectBinPacking: false

FixNamespaceComments: true

IncludeBlocks: Regroup
IncludeCategories:
    - Regex: '^".*\/.*\.h"' # Include in quotes with path (e.g. module/hdr.hpp)
      Priority: 3
      SortPriority: 0
      CaseSensitive: false
    - Regex: '^".*\/.*\.hpp"' # Include in quotes with path (e.g. module/hdr.hpp)
      Priority: 4
      SortPriority: 0
      CaseSensitive: false
    - Regex: '^".*\.h"' # Include in quotes with path (e.g. module/hdr.hpp)
      Priority: 1
      SortPriority: 0
      CaseSensitive: false
    - Regex: '^".*\.hpp"' # Include in quotes with path (e.g. module/hdr.hpp)
      Priority: 2
      SortPriority: 0
      CaseSensitive: false
    - Regex: '^<.*\/.*\.h>'
      Priority: 7
      SortPriority: 0
      CaseSensitive: false
    - Regex: '^<.*\/.*\.hpp>'
      Priority: 8
      SortPriority: 0
      CaseSensitive: false
    - Regex: '^<.*\.h>'
      Priority: 5
      SortPriority: 0
      CaseSensitive: false
    - Regex: '^<.*\.hpp>'
      Priority: 6
      SortPriority: 0
      CaseSensitive: false
    - Regex: '^".*"'
      Priority: 9
      SortPriority: 0
      CaseSensitive: false
    - Regex: "^<.*>"
      Priority: 10
      SortPriority: 0
      CaseSensitive: false
    - Regex: ".*"
      Priority: 11
      SortPriority: 0
      CaseSensitive: false
IncludeIsMainRegex: "([-_](test|unittest))?$"
IncludeIsMainSourceRegex: ""

IndentAccessModifiers: true
IndentCaseBlocks: true
IndentCaseLabels: true
IndentExternBlock: AfterExternBlock
IndentGotoLabels: false
IndentPPDirectives: AfterHash
IndentRequires: false
IndentRequiresClause: false
IndentWrappedFunctionNames: true
IndentWidth: 4

InsertBraces: true
InsertNewlineAtEOF: true
InsertTrailingCommas: None

IntegerLiteralSeparator:
  Binary: -1
  Decimal: -1
  Hex: -1

KeepEmptyLinesAtTheStartOfBlocks: false

LambdaBodyIndentation: Signature

Language: Cpp

LineEnding: DeriveLF

MaxEmptyLinesToKeep: 1

NamespaceIndentation: None

PPIndentWidth: 2

PackConstructorInitializers: Never

PenaltyBreakAssignment: 2
PenaltyBreakBeforeFirstCallParameter: 1
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakString: 1000
PenaltyBreakTemplateDeclaration: 10
PenaltyExcessCharacter: 1000000
PenaltyReturnTypeOnItsOwnLine: 200
PenaltyIndentedWhitespace: 0

PointerAlignment: Right
QualifierAlignment: Left
ReferenceAlignment: Pointer

ReflowComments: true

RemoveBracesLLVM: true
RemoveSemicolon: true

RequiresClausePosition: OwnLine
RequiresExpressionIndentation: OuterScope

SeparateDefinitionBlocks: Always

ShortNamespaceLines: 0

SortIncludes: CaseInsensitive
SortUsingDeclarations: Lexicographic

SpaceAfterCStyleCast: true
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: false

SpaceAroundPointerQualifiers: After

SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: Custom
SpaceBeforeParensOptions:
  AfterControlStatements: true
  AfterForeachMacros: false
  AfterFunctionDeclarationName: false
  AfterFunctionDefinitionName: false
  AfterIfMacros: false
  AfterOverloadedOperator: false
  AfterRequiresInClause: true
  AfterRequiresInExpression: true
  BeforeNonEmptyParentheses: false
SpaceBeforeRangeBasedForLoopColon: false
SpaceBeforeSquareBrackets: false

SpaceInEmptyBlock: false
SpaceInEmptyParentheses: true
SpacesBeforeTrailingComments: 4
SpacesInAngles: Never
SpacesInConditionalStatement: false
SpacesInContainerLiterals: false
SpacesInCStyleCastParentheses: false
SpacesInLineCommentPrefix:
    Minimum: 1
    Maximum: -1
SpacesInParentheses: false
SpacesInSquareBrackets: false

# Standard: Auto

TabWidth: 4

UseCRLF: false

UseTab: Never

---

